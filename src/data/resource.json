[
  {
    "id": 1,
    "title": "성능 하면 빠질 수 없는 메모이제이션",
    "tags": ["메모이제이션", "성능최적화", "React", "함수형프로그래밍"],
    "description": "React에서 메모이제이션을 활용한 성능 최적화 방법을 알아봅니다. useMemo, useCallback, React.memo의 적절한 사용 시점과 주의사항, 그리고 불필요한 메모이제이션을 제거하는 원칙들을 소개합니다 ♪",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2023-08-01",
    "resourceUrl": "https://d2.naver.com/helloworld/9223303",
    "author": "박지혜",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 2,
    "title": "자바스크립트 비동기 프로그래밍",
    "tags": ["JavaScript", "비동기", "Promise", "async/await"],
    "description": "자바스크립트의 비동기 프로그래밍 개념부터 실제 활용까지 상세히 설명합니다. Promise의 기본 개념부터 async/await 문법까지 단계별로 학습할 수 있으며, 실제 API 호출 예제를 통해 실무 응용 방법을 배울 수 있습니다 ♪",
    "difficulty": "쉬움",
    "category": "프론트엔드",
    "dateAdded": "2018-02-06",
    "resourceUrl": "https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation/",
    "author": "Captain Pangyo",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 3,
    "title": "Web Worker로 이미지 처리 최적화하기",
    "tags": ["Web Worker", "이미지처리", "성능최적화", "JavaScript", "프론트엔드"],
    "description": "올리브영의 SNS 기능인 '셔터'에서 발생한 이미지 처리 과정의 성능 문제를 Web Worker를 활용해 해결한 경험을 공유합니다. Web Worker를 도입하여 CPU 집약적인 이미지 처리 작업을 메인 스레드와 분리함으로써 UI 반응성을 유지하고, 메모리 사용을 분산하여 안정적인 사용자 경험을 확보했습니다. 이 글은 Web Worker의 개념과 장점, 구현 방법, 그리고 실제 적용 결과를 상세히 설명하며, 프론트엔드에서 무거운 연산 처리를 최적화하려는 개발자들에게 유용한 접근법을 제시합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-04-25",
    "resourceUrl": "https://oliveyoung.tech/2025-04-25/web-worker-for-image-processing/",
    "author": "d9",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 4,
    "title": "Docker 컨테이너 기초부터 오케스트레이션까지",
    "tags": ["Docker", "컨테이너", "DevOps", "인프라", "개발환경"],
    "description": "Docker의 기본 개념부터 실무에서의 활용까지 체계적으로 학습할 수 있는 가이드입니다. Dockerfile 작성법, 네트워크 구성, 볼륨 관리, 그리고 Docker Compose를 활용한 멀티 컨테이너 개발 환경을 구성하는 방법을 다룹니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2023-05-10",
    "resourceUrl": "https://docs.docker.com/get-started/",
    "author": "Docker Docs",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 5,
    "title": "React 컴포넌트 설계 패턴",
    "tags": ["React", "컴포넌트", "디자인패턴", "재사용성"],
    "description": "React 애플리케이션의 확장성과 유지보수성을 높이는 다양한 컴포넌트 설계 패턴을 소개합니다. Compound Components, Render Props, Custom Hooks, HOC 등 여러 패턴의 장단점과 실제 적용 사례를 통해 효과적인 컴포넌트 구조를 설계하는 방법을 배울 수 있습니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-09-15",
    "resourceUrl": "https://www.patterns.dev/react",
    "author": "Lydia Hallie & Addy Osmani",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 6,
    "title": "Node.js Express 프레임워크 완벽 가이드",
    "tags": ["Node.js", "Express", "백엔드", "API"],
    "description": "Node.js의 대표적인 웹 프레임워크인 Express를 활용하여 견고한 백엔드 API 서비스를 구축하는 방법을 단계별로 설명합니다. 라우팅, 미들웨어, 에러 핸들링, 데이터베이스 연동 등 실무에 필요한 모든 내용을 포괄적으로 다룹니다.",
    "difficulty": "쉬움",
    "category": "백엔드",
    "dateAdded": "2025-03-31",
    "resourceUrl": "https://expressjs.com/",
    "author": "Express.js",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 7,
    "title": "타입스크립트로 시작하는 함수형 프로그래밍",
    "tags": ["TypeScript", "함수형프로그래밍", "FP", "불변성"],
    "description": "타입스크립트 환경에서 함수형 프로그래밍 원칙을 적용하는 방법을 상세히 설명합니다. 순수 함수, 불변성, 고차 함수, 합성 등의 핵심 개념과 함께 타입 시스템을 활용한 안전한 함수형 코드 작성법을 배울 수 있습니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2025-03-03",
    "resourceUrl": "https://github.com/enricopolanski/functional-programming",
    "author": "Enrico Polanski",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 8,
    "title": "CSS Grid와 Flexbox 레이아웃 마스터하기",
    "tags": ["CSS", "Grid", "Flexbox", "반응형웹", "레이아웃"],
    "description": "현대적인 웹 레이아웃을 구현하기 위한 CSS Grid와 Flexbox의 활용법을 배웁니다. 두 기술의 특징과 차이점, 적합한 사용 사례와 함께 복잡한 레이아웃을 쉽게 구현할 수 있는 다양한 기법과 반응형 디자인 전략을 소개합니다.",
    "difficulty": "쉬움",
    "category": "프론트엔드",
    "dateAdded": "2024-09-26",
    "resourceUrl": "https://css-tricks.com/snippets/css/complete-guide-grid/",
    "author": "CSS-Tricks",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 9,
    "title": "JavaScript 성능 최적화 기법",
    "tags": ["JavaScript", "성능최적화", "웹성능", "프론트엔드"],
    "description": "JavaScript 애플리케이션의 성능을 향상시키는 다양한 기법을 분석합니다. 메모리 누수 방지, 렌더링 최적화, 번들 크기 감소, 네트워크 요청 최적화 등 실제 성능 병목을 해결하는 방법을 브라우저의 동작 원리와 함께 설명합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2015-03-20",
    "resourceUrl": "https://web.dev/articles/optimize-javascript-execution?hl=ko",
    "author": "Google Web Dev",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 10,
    "title": "Flutter 애니메이션 고급 기법",
    "tags": ["Flutter", "애니메이션", "UI/UX", "인터랙션", "모션디자인"],
    "description": "Flutter에서 제공하는 다양한 애니메이션 기능을 활용하여 세련된 UI를 구현하는 방법을 상세히 설명합니다. 암시적 애니메이션, 명시적 애니메이션, Hero 애니메이션, Staggered 애니메이션 등 다양한 기법을 예제 코드와 함께 배울 수 있습니다.",
    "difficulty": "보통",
    "category": "모바일",
    "dateAdded": "2025-04-17",
    "resourceUrl": "https://docs.flutter.dev/ui/animations",
    "author": "Flutter 개발팀",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 11,
    "title": "React 렌더링 성능 최적화의 모든 것",
    "tags": ["React", "성능최적화", "렌더링", "Profiling"],
    "description": "React 애플리케이션의 렌더링 성능을 분석하고 최적화하는 방법을 종합적으로 다룹니다. React Profiler 활용법, 불필요한 렌더링 방지, 큰 목록 최적화, 코드 스플리팅 등 실제 프로젝트에서 활용할 수 있는 다양한 기법을 소개합니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2019-09-09",
    "resourceUrl": "https://kentcdodds.com/blog/fix-the-slow-render-before-you-fix-the-re-render",
    "author": "Kent C. Dodds",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 12,
    "title": "Node.js 백엔드 아키텍처 설계 원칙",
    "tags": ["Node.js", "아키텍처", "백엔드", "Clean Architecture"],
    "description": "Node.js로 확장 가능하고 유지보수가 용이한 백엔드 시스템을 설계하는 원칙과 방법론을 소개합니다. 계층형 아키텍처, 헥사고날 아키텍처, DDD(도메인 주도 설계) 등 다양한 아키텍처 패턴의 장단점을 비교하고 실제 구현 사례를 제시합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2025-04-16",
    "resourceUrl": "https://github.com/goldbergyoni/nodebestpractices",
    "author": "Yoni Goldberg",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 13,
    "title": "Docker로 구축하는 CI/CD 파이프라인",
    "tags": ["Docker", "CI/CD", "DevOps", "자동화"],
    "description": "Docker를 활용하여 지속적 통합/배포(CI/CD) 파이프라인을 구축하는 방법을 단계별로 설명합니다. Jenkins, GitHub Actions, GitLab CI 등 다양한 CI/CD 도구와 Docker를 연동하여 빌드, 테스트, 배포 프로세스를 자동화하는 방법을 배울 수 있습니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2023-06-25",
    "resourceUrl": "https://docs.docker.com/ci-cd/github-actions/",
    "author": "Docker 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 14,
    "title": "AWS 클라우드 비용 최적화 전략",
    "tags": ["AWS", "비용최적화", "클라우드", "FinOps"],
    "description": "AWS 클라우드 환경에서 불필요한 비용을 줄이고 효율적인 리소스 사용을 위한 다양한 전략과 기법을 소개합니다. 예약 인스턴스, 스팟 인스턴스, AWS Savings Plans, 자동 스케일링 등을 활용한 비용 최적화 방법을 실제 사례와 함께 제시합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2020-04-14",
    "resourceUrl": "https://aws.amazon.com/ko/blogs/korea/10-things-you-can-do-today-to-reduce-aws-costs/",
    "author": "AWS Korea",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 15,
    "title": "자바스크립트 클로저 완벽 이해하기",
    "tags": ["JavaScript", "클로저", "스코프", "함수형프로그래밍"],
    "description": "자바스크립트의 핵심 개념인 클로저(Closure)의 작동 원리와 활용법을 심층적으로 설명합니다. 렉시컬 스코프, 실행 컨텍스트, 가비지 컬렉션과의 관계를 이해하고, 실제 개발에서 클로저를 활용한 다양한 패턴과 주의사항을 배울 수 있습니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-04-05",
    "resourceUrl": "https://poiemaweb.com/js-closure",
    "author": "Poiemaweb",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 16,
    "title": "GraphQL API 서버 구축하기 : Apollo Server 활용",
    "tags": ["GraphQL", "Apollo Server", "Node.js", "API", "스키마설계"],
    "description": "Apollo Server를 활용하여 GraphQL API 서버를 구축하는 방법을 배웁니다. WebSocket 프로토콜, Apollo Server/Client 설정, 실시간 데이터 처리 전략 등 GraphQL 기반 실시간 통신의 모든 측면을 실제 예제와 함께 설명합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-09-05",
    "resourceUrl": "https://www.apollographql.com/docs/apollo-server/",
    "author": "Apollo GraphQL",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 17,
    "title": "React 컴포넌트 테스트 전략",
    "tags": ["React", "테스트", "Jest", "React Testing Library"],
    "description": "React 애플리케이션의 컴포넌트를 효과적으로 테스트하는 방법과 전략을 소개합니다. Jest와 React Testing Library를 활용한 유닛 테스트, 통합 테스트, 스냅샷 테스트 등 다양한 테스트 기법과 모범 사례를 예제 코드와 함께 설명합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2020-05-04",
    "resourceUrl": "https://kentcdodds.com/blog/common-mistakes-with-react-testing-library",
    "author": "Kent C. Dodds",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 18,
    "title": "Docker 컨테이너 보안 강화 가이드",
    "tags": ["Docker", "보안", "DevSecOps", "컨테이너"],
    "description": "Docker 컨테이너 환경에서 발생할 수 있는 다양한 보안 위협과 이를 방지하기 위한 방법을 종합적으로 다룹니다. 이미지 취약점 스캔, 권한 관리, 네트워크 보안 설정, 런타임 보안 등 컨테이너 라이프사이클 전반에 걸친 보안 강화 방법을 제시합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-10-15",
    "resourceUrl": "https://docs.docker.com/engine/security/",
    "author": "Docker 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 19,
    "title": "AWS 클라우드 인프라 설계 기초",
    "tags": ["AWS", "클라우드", "인프라", "EC2", "S3", "RDS"],
    "description": "AWS 클라우드 서비스를 활용한 기본 인프라 설계 방법을 배웁니다. EC2, S3, RDS, Lambda 등 핵심 서비스의 기초 개념과 구성 방법, 구현 예제를 통해 실무 활용 능력을 키울 수 있습니다.",
    "difficulty": "쉬움",
    "category": "백엔드",
    "dateAdded": "2024-02-25",
    "resourceUrl": "https://aws.amazon.com/ko/getting-started/",
    "author": "Amazon Web Services",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 20,
    "title": "GraphQL과 Apollo Client 실전 활용법",
    "tags": ["GraphQL", "Apollo", "React", "상태관리", "캐싱"],
    "description": "React 애플리케이션에서 Apollo Client를 활용한 GraphQL 데이터 관리 방법을 알아봅니다. 쿼리, 뮤테이션, 캐싱 전략, 에러 핸들링 등 실무에서 필요한 기법들을 소개합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-09-28",
    "resourceUrl": "https://www.apollographql.com/docs/react/",
    "author": "Apollo GraphQL",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 21,
    "title": "Docker Compose로 개발 환경 구축하기",
    "tags": ["Docker", "Docker Compose", "개발환경", "마이크로서비스", "컨테이너 오케스트레이션"],
    "description": "Docker Compose를 활용하여 다중 컨테이너 애플리케이션을 정의하고 실행하는 방법을 배웁니다. YAML 파일 작성법부터 네트워크, 볼륨 설정까지 실무에 바로 적용 가능한 내용을 다룹니다.",
    "difficulty": "쉬움",
    "category": "백엔드",
    "dateAdded": "2023-11-15",
    "resourceUrl": "https://docs.docker.com/compose/",
    "author": "Docker 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 22,
    "title": "자바스크립트 성능 최적화 기법",
    "tags": ["JavaScript", "성능최적화", "메모리관리", "렌더링", "프로파일링"],
    "description": "자바스크립트 애플리케이션의 성능을 향상시키는 다양한 최적화 기법을 소개합니다. 메모리 관리, 렌더링 성능 개선, 번들 사이즈 축소 등 실제 사례와 함께 분석합니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2025-03-22",
    "resourceUrl": "https://developer.mozilla.org/ko/docs/Web/Performance",
    "author": "MDN Web Docs",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 23,
    "title": "Node.js 보안 가이드: 취약점과 대응 방안",
    "tags": ["Node.js", "보안", "인증", "암호화", "OWASP"],
    "description": "Node.js 애플리케이션에서 발생할 수 있는 다양한 보안 취약점과 이에 대한 대응 방안을 알아봅니다. 인증, 권한 관리, 입력 검증, 의존성 관리 등 실무 보안 가이드를 제공합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-08-28",
    "resourceUrl": "https://nodejs.org/en/docs/guides/security/",
    "author": "Node.js 재단",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 24,
    "title": "React 컴포넌트 테스트 전략",
    "tags": ["React", "테스팅", "Jest", "React Testing Library", "TDD"],
    "description": "React 컴포넌트를 효과적으로 테스트하는 방법과 전략을 소개합니다. Jest와 React Testing Library를 활용한 단위 테스트, 통합 테스트 작성법과 테스트 주도 개발(TDD) 접근법을 배웁니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2024-06-03",
    "resourceUrl": "https://testing-library.com/docs/react-testing-library/intro/",
    "author": "Testing Library",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 25,
    "title": "AWS Lambda와 API Gateway로 서버리스 API 구축하기",
    "tags": ["AWS", "서버리스", "Lambda", "API Gateway", "CloudFormation"],
    "description": "AWS Lambda와 API Gateway를 활용하여 확장 가능한 서버리스 API를 구축하는 방법을 알아봅니다. 함수 작성부터 배포, 모니터링까지 전체 개발 사이클을 다룹니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2024-01-15",
    "resourceUrl": "https://aws.amazon.com/ko/lambda/getting-started/",
    "author": "Amazon Web Services",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 26,
    "title": "웹 성능 최적화를 위한 브라우저 렌더링 과정 이해하기",
    "tags": ["웹성능", "브라우저", "렌더링", "최적화", "크리티컬렌더링패스"],
    "description": "웹 브라우저의 렌더링 과정을 심도 있게 이해하고 성능 최적화에 적용하는 방법을 배웁니다. DOM, CSSOM, 렌더 트리, 레이아웃, 페인팅 등 각 단계별 최적화 기법을 소개합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-12-13",
    "resourceUrl": "https://web.dev/rendering-performance/",
    "author": "Google Developers",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 27,
    "title": "Node.js 스트림(Stream) API 완벽 가이드",
    "tags": ["Node.js", "스트림", "버퍼", "메모리효율", "파일처리"],
    "description": "Node.js의 스트림 API를 활용한 효율적인 데이터 처리 방법을 다룹니다. 읽기 스트림, 쓰기 스트림, 양방향 스트림, 변환 스트림의 개념과 활용법을 배우고, 대용량 데이터 처리와 메모리 효율성을 높이는 패턴들을 실제 예제와 함께 학습합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-10-25",
    "resourceUrl": "https://nodejs.org/api/stream.html",
    "author": "Node.js 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 28,
    "title": "Node.js 성능 최적화 : 팁과 요령",
    "tags": ["Node.js", "성능최적화", "비동기", "클러스터링"],
    "description": "Node.js 애플리케이션의 성능을 향상시키기 위한 다양한 팁과 트릭을 소개합니다. 비동기 코드 작성, 데이터베이스 쿼리 최적화, 클러스터링 활용 등 실용적인 전략을 다룹니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-02-13",
    "resourceUrl": "https://dev.to/angga_indriya/nodejs-performance-optimization-tips-and-tricks-1hmi",
    "author": "Angga Indriya",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 29,
    "title": "리액트 네이티브로 시작하는 모바일 앱 개발",
    "tags": ["React Native", "모바일앱", "JavaScript", "크로스플랫폼"],
    "description": "자바스크립트와 리액트 지식을 활용해 iOS/Android 앱을 개발하는 방법을 배웁니다. 컴포넌트 구성, 네비게이션, 상태 관리, 네이티브 모듈 연동까지 단계별로 학습합니다.",
    "difficulty": "보통",
    "category": "모바일",
    "dateAdded": "2025-04-14",
    "resourceUrl": "https://reactnative.dev/docs/getting-started",
    "author": "React Native 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 30,
    "title": "Kubernetes 입문과 실무 활용",
    "tags": ["Kubernetes", "컨테이너", "DevOps", "오케스트레이션"],
    "description": "컨테이너 오케스트레이션 도구인 Kubernetes의 기본 개념과 실무 활용법을 배웁니다. 파드, 서비스, 배포, 스테이트풀셋 등 핵심 리소스와 클러스터 운영 노하우를 다룹니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-03-06",
    "resourceUrl": "https://kubernetes.io/ko/docs/tutorials/kubernetes-basics/",
    "author": "Kubernetes 공식 문서",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 31,
    "title": "타입스크립트와 함께하는 리액트 개발",
    "tags": ["TypeScript", "React", "타입안전성", "상태관리"],
    "description": "리액트 프로젝트에 타입스크립트를 적용하는 방법과 장점을 알아봅니다. 컴포넌트 props 타입 정의, 훅 활용법, 상태 관리 라이브러리와의 통합 등을 예제 코드와 함께 설명합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-12-05",
    "resourceUrl": "https://react-typescript-cheatsheet.netlify.app/",
    "author": "React TypeScript Cheatsheets 팀",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 32,
    "title": "Flutter 상태 관리 마스터하기 : Provider부터 Riverpod까지",
    "tags": ["Flutter", "상태관리", "Provider", "Riverpod"],
    "description": "Flutter 앱에서 효율적인 상태 관리를 위한 다양한 접근법을 비교합니다. Provider, BLoC, Redux, Riverpod 등 주요 상태 관리 라이브러리의 장단점과 적합한 사용 상황을 분석합니다.",
    "difficulty": "어려움",
    "category": "모바일",
    "dateAdded": "2025-04-02",
    "resourceUrl": "https://docs.flutter.dev/data-and-backend/state-mgmt/intro",
    "author": "Flutter 개발팀",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 33,
    "title": "웹 개발자를 위한 HTTP 완벽 가이드",
    "tags": ["HTTP", "네트워크", "API", "웹표준"],
    "description": "웹 개발에 필수적인 HTTP 프로토콜의 작동 원리와 활용법을 알아봅니다. 요청/응답 사이클, 상태 코드, 헤더, 쿠키, 캐싱, CORS 등 핵심 개념을 실무 관점에서 설명합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2024-12-17",
    "resourceUrl": "https://developer.mozilla.org/ko/docs/Web/HTTP",
    "author": "MDN Web Docs",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 34,
    "title": "Node.js 성능 향상을 위한 10가지 필수 팁",
    "tags": ["Node.js", "성능최적화", "이벤트루프", "비동기"],
    "description": "Node.js 애플리케이션의 성능을 향상시키기 위한 10가지 필수 최적화 기법을 소개하며, 이벤트 루프의 이해부터 비동기 처리, 캐싱 전략까지 다양한 주제를 다룹니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-04-01",
    "resourceUrl": "https://codezup.com/nodejs-performance-optimization-techniques/",
    "author": "CodezUp",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 35,
    "title": "JavaScript ES6+ 실전 활용",
    "tags": ["JavaScript", "ES6", "모던자바스크립트", "함수형프로그래밍"],
    "description": "ES6 이상의 JavaScript 문법과 기능을 실무에서 효과적으로 활용하는 방법을 알아봅니다. 화살표 함수, 구조 분해 할당, 프로미스, async/await 등 모던 자바스크립트의 핵심 기능을 예제 코드와 함께 설명합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-05-16",
    "resourceUrl": "https://ko.javascript.info/",
    "author": "The Modern JavaScript Tutorial",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 36,
    "title": "Flutter 앱 성능 개선 방법",
    "tags": ["Flutter", "성능최적화", "위젯", "렌더링"],
    "description": "Flutter 애플리케이션의 성능을 최적화하기 위한 모범 사례를 소개합니다. 위젯 트리 관리, 렌더링 최적화, 메모리 사용 등을 다룹니다.",
    "difficulty": "쉬움",
    "category": "모바일",
    "dateAdded": "2024-08-19",
    "resourceUrl": "https://medium.com/@flutterwtf/how-to-improve-flutter-app-performance-best-practices-f511f6002e05",
    "author": "What the Flutter",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 37,
    "title": "실전 타입스크립트 프로젝트: 점진적 마이그레이션 전략",
    "tags": ["TypeScript", "마이그레이션", "리팩토링", "타입안전성"],
    "description": "기존 자바스크립트 프로젝트를 타입스크립트로 안전하게 마이그레이션하는 전략과 방법론을 소개합니다. 점진적 도입, any 타입 최소화, 유틸리티 타입 활용 등 실무 팁을 제공합니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2024-02-05",
    "resourceUrl": "https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html",
    "author": "TypeScript 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 38,
    "title": "GraphQL 기초부터 실전까지",
    "tags": ["GraphQL", "API", "Apollo", "REST 대안"],
    "description": "GraphQL의 기본 개념부터 실제 서비스에 도입하는 방법까지 상세히 다룹니다. 스키마 정의, 리졸버 구현, 쿼리 최적화, 캐싱 전략, N+1 문제 해결 등 핵심 주제를 다룹니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2023-06-20",
    "resourceUrl": "https://graphql-kr.github.io/learn/",
    "author": "GraphQL Korea",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 39,
    "title": "모던 자바스크립트 Deep Dive",
    "tags": ["JavaScript", "ES6", "튜토리얼", "개념정리"],
    "description": "자바스크립트의 기본 개념부터 고급 활용법까지 깊이 있게 다루는 온라인 학습 자료입니다. 프로토타입, 클로저, 비동기 프로그래밍 등 핵심 개념을 예제 코드와 함께 설명합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-10-15",
    "resourceUrl": "https://poiemaweb.com/",
    "author": "Poiema Web",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 40,
    "title": "타입스크립트 핸드북",
    "tags": ["TypeScript", "정적타입", "튜토리얼"],
    "description": "타입스크립트의 기본 문법부터 고급 타입 활용법까지 한국어로 정리된 가이드. 자바스크립트 개발자가 타입스크립트로 쉽게 전환할 수 있도록 단계별로 설명합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-09-20",
    "resourceUrl": "https://typescript-kr.github.io/",
    "author": "TypeScript Korea",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 41,
    "title": "AWS 서버리스 프레임워크 실전 가이드",
    "tags": ["AWS", "서버리스", "Lambda", "CloudFormation"],
    "description": "Serverless Framework를 활용한 AWS Lambda 기반 애플리케이션 개발과 배포 방법을 배웁니다. 인프라스트럭처 코드(IaC), CI/CD 파이프라인 구축, 모니터링 설정 등 실무 노하우를 담고 있습니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-03-20",
    "resourceUrl": "https://www.serverless.com/framework/docs/",
    "author": "Serverless Inc.",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 42,
    "title": "AWS Lambda와 API Gateway로 서버리스 아키텍처 구축하기",
    "tags": ["AWS", "서버리스", "Lambda", "API Gateway"],
    "description": "서버 관리 없이 백엔드 API를 구축하는 서버리스 아키텍처의 원리와 구현 방법을 다룹니다. AWS Lambda 함수 작성부터 API Gateway 연동, 배포 자동화까지 실습 형태로 진행됩니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-01-15",
    "resourceUrl": "https://aws.amazon.com/ko/serverless/build-a-web-app/",
    "author": "AWS",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 43,
    "title": "React 상태 관리 라이브러리 비교: Redux vs. MobX vs. Recoil",
    "tags": ["React", "상태관리", "Redux", "MobX", "Recoil"],
    "description": "다양한 React 상태 관리 라이브러리의 특징과 적합한 사용 상황을 비교 분석합니다. 각 라이브러리의 장단점, 보일러플레이트 코드 양, 학습 곡선, 성능 특성 등을 실제 사용 사례와 함께 설명합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-12-20",
    "resourceUrl": "https://react.dev/learn/choosing-the-state-structure",
    "author": "React 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 44,
    "title": "테스트 주도 개발(TDD)로 배우는 JavaScript",
    "tags": ["TDD", "테스트", "Jest", "단위테스트"],
    "description": "테스트 주도 개발 방법론을 자바스크립트 환경에서 실천하는 방법을 배웁니다. Jest를 활용한 단위 테스트와 통합 테스트 작성법, 모킹 전략, 테스트 커버리지 분석 등을 다룹니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2024-01-16",
    "resourceUrl": "https://jestjs.io/docs/getting-started",
    "author": "Facebook Open Source",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 45,
    "title": "Next.js로 배우는 서버 사이드 렌더링",
    "tags": ["Next.js", "SSR", "React", "성능최적화"],
    "description": "Next.js를 활용한 서버 사이드 렌더링의 개념과 구현 방법을 배웁니다. SEO 최적화, 초기 로딩 성능 향상 전략과 정적 생성(SSG) 활용법도 함께 알아봅니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2023-11-05",
    "resourceUrl": "https://nextjs.org/learn/foundations/about-nextjs",
    "author": "Vercel",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 46,
    "title": "Docker 완벽 가이드",
    "tags": ["Docker", "컨테이너", "DevOps", "인프라"],
    "description": "Docker의 기본 개념부터 실무에서의 활용법까지 단계별로 배울 수 있는 가이드입니다. 컨테이너 기술의 작동 원리와 Docker Compose, Docker Swarm 활용법을 포함합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2021-02-14",
    "resourceUrl": "https://www.44bits.io/ko/post/easy-deploy-with-docker",
    "author": "44bits",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 47,
    "title": "useMemo 및 useCallback Hooks를 사용하여 성능 최적화하는 방법",
    "tags": ["React", "useMemo", "useCallback", "성능최적화"],
    "description": "React에서 useMemo와 useCallback 훅을 사용하여 성능을 최적화하는 방법을 설명합니다. 불필요한 리렌더링을 방지하고 컴포넌트의 성능을 향상시키는 전략을 다룹니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2024-03-05",
    "resourceUrl": "https://www.geeksforgeeks.org/optimizing-performance-with-usememo-and-usecallback-hooks/",
    "author": "GeeksforGeeks",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 48,
    "title": "웹 접근성과 시맨틱 HTML의 중요성",
    "tags": ["HTML", "웹접근성", "시맨틱태그", "SEO", "스크린리더"],
    "description": "모두가 이용할 수 있는 웹 사이트를 만들기 위한 웹 접근성의 기본 원칙과 시맨틱 HTML의 활용법을 배웁니다. 의미에 맞는 태그 사용법, 스크린 리더 호환성, 키보드 접근성, ARIA 속성 등 WCAG 가이드라인 준수 방법과 실제 적용 사례를 소개합니다.",
    "difficulty": "쉬움",
    "category": "프론트엔드",
    "dateAdded": "2023-07-05",
    "resourceUrl": "https://developer.mozilla.org/ko/docs/Learn/Accessibility",
    "author": "MDN Web Docs",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 49,
    "title": "Node.js 백엔드 성능 최적화 기법",
    "tags": ["Node.js", "성능최적화", "벤치마킹", "프로파일링"],
    "description": "Node.js 애플리케이션의 성능을 분석하고 최적화하는 다양한 기법을 알아봅니다. 메모리 누수 감지, 비동기 코드 최적화, 클러스터링, 캐싱 전략 등 실무에서 활용할 수 있는 팁을 제공합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-01-05",
    "resourceUrl": "https://nodejs.org/ko/docs/guides/dont-block-the-event-loop/",
    "author": "Node.js 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 50,
    "title": "JavaScript의 비동기 처리 이해하기",
    "tags": ["JavaScript", "비동기", "Promise", "Async", "Await"],
    "description": "JavaScript의 비동기 처리 메커니즘을 깊이 이해합니다. 콜백 함수부터 Promise, async/await까지 발전 과정을 따라가며 이벤트 루프의 작동 원리와 함께 학습합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-03-22",
    "resourceUrl": "https://developer.mozilla.org/ko/docs/Learn/JavaScript/Asynchronous",
    "author": "MDN Web Docs",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 51,
    "title": "웹 접근성 실무 가이드",
    "tags": ["웹접근성", "HTML", "스크린리더", "ARIA"],
    "description": "모든 사용자를 위한 웹을 만들기 위한 접근성 원칙과 실무 적용 방법을 설명합니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2023-08-01",
    "resourceUrl": "https://www.w3.org/WAI/test-evaluate/",
    "author": "W3C",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 52,
    "title": "REST API vs GraphQL: 무엇을 선택할까?",
    "tags": ["API", "REST", "GraphQL", "설계"],
    "description": "REST와 GraphQL의 개념을 비교하고 각각의 장단점과 실무 활용 방법을 설명합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2024-01-20",
    "resourceUrl": "https://www.howtographql.com/",
    "author": "HowToGraphQL",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 53,
    "title": "타입스크립트와 함께하는 리액트 훅 마스터하기",
    "tags": ["React", "TypeScript", "Hooks", "함수형컴포넌트"],
    "description": "React의 Hooks API를 TypeScript와 함께 사용하는 방법을 소개합니다. 커스텀 훅 작성법, 제네릭 타입을 활용한 재사용 가능한 훅 디자인, 그리고 타입 안전성을 높이는 패턴들을 배웁니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-01-12",
    "resourceUrl": "https://github.com/typescript-cheatsheets/react",
    "author": "TypeScript Cheatsheets",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 54,
    "title": "Next.js 13 데이터 페칭 전략",
    "tags": ["Next.js", "React", "데이터페칭", "SSR"],
    "description": "Next.js 13의 새로운 App Router와 함께 도입된 데이터 페칭 패러다임을 소개합니다. 서버 컴포넌트에서의 데이터 페칭, 캐싱 전략, 스트리밍 및 Suspense 활용법 등 성능과 사용자 경험을 개선하는 최신 기법들을 다룹니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-05-21",
    "resourceUrl": "https://nextjs.org/docs/app/building-your-application/data-fetching",
    "author": "Vercel",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 55,
    "title": "JavaScript 비동기 처리의 진화",
    "tags": ["JavaScript", "비동기프로그래밍", "Promise", "async/await"],
    "description": "JavaScript의 비동기 처리 방식의 발전 과정을 살펴봅니다. 콜백 함수부터 Promise, async/await까지 각 패러다임의 장단점과 실제 사용 사례를 통해 효과적인 비동기 코드 작성법을 배웁니다.",
    "difficulty": "쉬움",
    "category": "프론트엔드",
    "dateAdded": "2025-04-14",
    "resourceUrl": "https://javascript.info/async",
    "author": "javascript.info",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 56,
    "title": "AWS Lambda와 API Gateway로 서버리스 API 구축하기",
    "tags": ["AWS", "서버리스", "Lambda", "API Gateway"],
    "description": "AWS Lambda와 API Gateway를 활용하여 확장성 높은 서버리스 API를 구축하는 방법을 단계별로 안내합니다. 인증, 로깅, 모니터링 설정 및 최적화 전략까지 실무에 바로 적용할 수 있는 내용을 다룹니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-05-02",
    "resourceUrl": "https://aws.amazon.com/ko/lambda/resources/?lambda-blogs.sort-by=item.additionalFields.createdDate&lambda-blogs.sort-order=desc",
    "author": "AWS",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 57,
    "title": "Node.js와 Express로 TypeScript를 설정하는 방법",
    "tags": ["TypeScript", "Express", "API설계", "백엔드개발"],
    "description": "TypeScript와 Express.js를 활용하여 타입 안전성이 보장된 백엔드 API를 설계하고 구현하는 방법을 소개합니다. 인터페이스 정의, 미들웨어 구성, 에러 핸들링, 그리고 테스트 전략까지 포함합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-03-28",
    "resourceUrl": "https://blog.logrocket.com/how-to-set-up-node-typescript-express/",
    "author": "Aman Mittal",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 58,
    "title": "Flutter 상태관리 라이브러리 비교분석",
    "tags": ["Flutter", "상태관리", "Provider", "Riverpod", "BLoC"],
    "description": "Flutter에서 사용할 수 있는 다양한 상태 관리 라이브러리들(Provider, Riverpod, BLoC, GetX, MobX)을 비교 분석합니다. 각 라이브러리의 장단점, 적합한 사용 사례, 그리고 성능 측면에서의 차이점을 다룹니다.",
    "difficulty": "보통",
    "category": "모바일",
    "dateAdded": "2025-03-12",
    "resourceUrl": "https://docs.flutter.dev/data-and-backend/state-mgmt/options",
    "author": "Flutter 개발팀",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 59,
    "title": "React Native와 Flutter 성능 최적화 기법",
    "tags": ["React Native", "Flutter", "성능최적화", "모바일개발"],
    "description": "React Native와 Flutter 앱의 성능을 극대화하기 위한 다양한 최적화 기법을 소개합니다. 렌더링 최적화, 메모리 관리, 이미지 처리, 애니메이션 최적화 등 실제 프로덕션 앱에서 사용되는 기법들을 비교하며 설명합니다.",
    "difficulty": "어려움",
    "category": "모바일",
    "dateAdded": "2025-04-14",
    "resourceUrl": "https://reactnative.dev/docs/performance",
    "author": "React Native 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 60,
    "title": "자바스크립트 이벤트 루프 심층 분석",
    "tags": ["JavaScript", "이벤트루프", "비동기", "런타임"],
    "description": "JavaScript 엔진의 핵심인 이벤트 루프에 대해 심층적으로 분석합니다. 콜 스택, 태스크 큐, 마이크로태스크 큐의 작동 방식과 비동기 코드 실행 흐름을 시각적 예제와 함께 이해하기 쉽게 설명합니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2015-08-17",
    "resourceUrl": "https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/",
    "author": "Jake Archibald",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 61,
    "title": "AWS ECS로 컨테이너 오케스트레이션 마스터하기",
    "tags": ["AWS", "Docker", "ECS", "컨테이너오케스트레이션"],
    "description": "AWS Elastic Container Service(ECS)를 활용하여 컨테이너화된 애플리케이션을 효율적으로 배포하고 관리하는 방법을 학습합니다. 서비스 디스커버리, 로드 밸런싱, 오토스케일링, CloudWatch 모니터링 등의 주요 기능을 실습과 함께 다룹니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-01-15",
    "resourceUrl": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html",
    "author": "AWS",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 62,
    "title": "React Query로 서버 상태 관리 혁신하기",
    "tags": ["React", "React Query", "상태관리", "데이터페칭"],
    "description": "React Query를 활용하여 서버 상태를 효율적으로 관리하는 방법을 소개합니다. 캐싱, 백그라운드 업데이트, 페이지네이션, 무한 스크롤, 낙관적 업데이트 등 다양한 데이터 패칭 시나리오에 대한 해결책을 제시합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-05-18",
    "resourceUrl": "https://tanstack.com/query/latest/docs/react/overview",
    "author": "TanStack",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 63,
    "title": "React 앱 성능 최적화 도구",
    "tags": ["React", "성능최적화", "메모이제이션"],
    "description": "React 앱의 렌더링 성능을 높이기 위한 memo, useMemo, useCallback의 활용법을 실제 코드와 함께 정리한 글입니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-04-11",
    "resourceUrl": "https://dotiweb.tistory.com/entry/React-%EC%95%B1-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94-memo-useMemo-useCallback",
    "author": "DOTI Project",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 64,
    "title": "GraphQL과 Apollo로 효율적인 API 구축하기",
    "tags": ["GraphQL", "Apollo", "API", "데이터페칭"],
    "description": "REST API의 한계를 넘어 효율적인 데이터 요청을 가능하게 하는 GraphQL의 개념과 Apollo 클라이언트/서버 구현 방법을 배웁니다. 오버페칭과 언더페칭 문제 해결 사례도 소개합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-10-02",
    "resourceUrl": "https://www.apollographql.com/docs/",
    "author": "Apollo GraphQL",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 65,
    "title": "자바스크립트 초보자를 위한 33가지 개념",
    "tags": ["JavaScript", "기초", "튜토리얼", "코딩입문"],
    "description": "자바스크립트를 처음 접하는 개발자를 위한 핵심 개념 33가지를 쉽게 설명합니다. 변수, 함수, 스코프, 클로저 등 기본 개념부터 비동기 처리까지 이해하기 쉽게 소개합니다.",
    "difficulty": "쉬움",
    "category": "프론트엔드",
    "dateAdded": "2025-04-28",
    "resourceUrl": "https://github.com/leonardomso/33-js-concepts",
    "author": "Leonardo Maldonado",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 66,
    "title": "AWS S3와 CloudFront로 정적 웹사이트 최적화하기",
    "tags": ["AWS", "S3", "CloudFront", "성능최적화"],
    "description": "AWS S3와 CloudFront를 활용하여 정적 웹사이트를 호스팅하고 전 세계적으로 최적화된 성능을 제공하는 방법을 안내합니다. HTTPS 설정, 캐싱 전략, 비용 최적화, 배포 자동화까지 실무에 필요한 내용을 포괄적으로 다룹니다.",
    "difficulty": "쉬움",
    "category": "백엔드",
    "dateAdded": "2018-06-27",
    "resourceUrl": "https://aws.amazon.com/ko/blogs/networking-and-content-delivery/amazon-s3-amazon-cloudfront-a-match-made-in-the-cloud/",
    "author": "AWS",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 67,
    "title": "Flutter 테스트 자동화 완벽 가이드",
    "tags": ["Flutter", "테스트자동화", "단위테스트", "통합테스트"],
    "description": "Flutter 애플리케이션의 품질을 보장하기 위한 테스트 자동화 전략을 소개합니다. 단위 테스트, 위젯 테스트, 통합 테스트의 작성법과 최적의 테스트 커버리지를 달성하는 방법, CI/CD 파이프라인에 테스트를 통합하는 방안을 다룹니다.",
    "difficulty": "보통",
    "category": "모바일",
    "dateAdded": "2024-04-04",
    "resourceUrl": "https://docs.flutter.dev/testing",
    "author": "Flutter 개발팀",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 68,
    "title": "Docker 멀티스테이지 빌드로 이미지 최적화하기",
    "tags": ["Docker", "컨테이너", "CI/CD", "최적화"],
    "description": "Docker 멀티스테이지 빌드를 활용하여 작고 효율적인 컨테이너 이미지를 생성하는 방법을 소개합니다. 빌드 캐시 최적화, 레이어 구성 전략, 보안 강화 방법 등 프로덕션 환경에서 필요한 다양한 최적화 기법을 다룹니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-05-21",
    "resourceUrl": "https://docs.docker.com/build/building/multi-stage/",
    "author": "Docker 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 69,
    "title": "GraphQL 요청 워터폴 최적화하기",
    "tags": ["GraphQL", "성능최적화", "데이터로딩", "쿼리최적화"],
    "description": "GraphQL API에서 흔히 발생하는 N+1 쿼리 문제를 해결하는 다양한 접근법을 소개합니다. DataLoader 패턴, 쿼리 배치 처리, 필드 수준 리졸버 최적화 등 실제 프로덕션 환경에서 검증된 최적화 기법들을 다룹니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2017-03-06",
    "resourceUrl": "https://www.apollographql.com/blog/graphql/performance/optimizing-your-graphql-request-waterfalls/",
    "author": "Andy Ingram",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 70,
    "title": "AWS Lambda를 활용한 서버리스 아키텍처 설계",
    "tags": ["AWS", "서버리스", "Lambda", "마이크로서비스"],
    "description": "AWS Lambda를 중심으로 확장성과 비용 효율성이 높은 서버리스 아키텍처를 설계하는 방법을 소개합니다. 이벤트 기반 아키텍처, 콜드 스타트 최적화, DynamoDB 통합, Step Functions를 활용한 워크플로우 등 실무적인 내용을 다룹니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-12-10",
    "resourceUrl": "https://docs.aws.amazon.com/lambda/latest/dg/lambda-serverless-applications.html",
    "author": "AWS",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 71,
    "title": "Flutter 커스텀 페인팅과 애니메이션",
    "tags": ["Flutter", "CustomPainter", "애니메이션", "UI/UX"],
    "description": "Flutter의 CustomPainter 클래스를 활용하여 복잡한 커스텀 UI와 인터랙티브 애니메이션을 구현하는 방법을 소개합니다. 기본 도형 그리기부터 복잡한 차트, 그래프, 게임 요소까지 다양한 예제를 통해 학습합니다.",
    "difficulty": "어려움",
    "category": "모바일",
    "dateAdded": "2025-05-20",
    "resourceUrl": "https://api.flutter.dev/flutter/rendering/CustomPainter-class.html",
    "author": "Flutter 공식 문서",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 72,
    "title": "리액트 훅(Hook)의 모든 것",
    "tags": ["React", "Hook", "useState", "useEffect", "Custom Hook"],
    "description": "함수형 컴포넌트와 Hooks를 활용한 최신 React에 대해 정리하며 다이어그램, 그림, 과제, 600개 이상의 대화형 예제를 통해 상태 관리, 사이드 이펙트 처리, 그리고 커스텀 훅 작성법까지 단계별로 학습할 수 있습니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2023-03-16",
    "resourceUrl": "https://react.dev/blog/2023/03/16/introducing-react-dev",
    "author": "Dan Abramov 및 Rachel Nabors",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 73,
    "title": "GraphQL 시작하기: REST API의 진화",
    "tags": ["GraphQL", "API", "쿼리언어", "REST", "데이터페칭"],
    "description": "GraphQL의 기본 개념과 REST API와의 차이점을 이해합니다. 스키마 설계부터 쿼리, 뮤테이션, 구독까지 GraphQL의 핵심 기능을 예제와 함께 배웁니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-04-21",
    "resourceUrl": "https://graphql.org/learn/",
    "author": "GraphQL Foundation",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 74,
    "title": "Node.js에서 데이터베이스 연동 베스트 프랙티스",
    "tags": ["Node.js", "데이터베이스", "ORM", "SQL", "NoSQL"],
    "description": "Node.js 환경에서 다양한 데이터베이스를 효율적으로 연동하는 방법을 알아봅니다. SQL, NoSQL 데이터베이스별 ORM/ODM 활용법과 쿼리 최적화, 트랜잭션 관리 등 실무 노하우를 공유합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-04-24",
    "resourceUrl": "https://node-postgres.com/",
    "author": "Node Postgres",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 75,
    "title": "카카오페이 프론트엔드 개발자들이 React Query를 선택한 이유",
    "tags": ["React", "React Query", "상태관리", "카카오페이"],
    "description": "카카오페이 프론트엔드 팀이 기존 Redux 기반 상태 관리에서 React Query로 전환한 이유와 과정을 설명합니다. 서버 상태와 클라이언트 상태의 분리, 캐싱 전략, 비동기 데이터 처리의 간소화 등 React Query가 가져온 실질적인 개발 경험 향상에 대해 다룹니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2022-05-10",
    "resourceUrl": "https://tech.kakaopay.com/post/react-query-1/",
    "author": "카카오페이 투자FE유닛 에릭",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 76,
    "title": "자바스크립트 성능을 위한 메모리 관리와 가비지 컬렉션 이해하기",
    "tags": ["JavaScript", "성능최적화", "메모리관리", "가비지컬렉션"],
    "description": "자바스크립트의 메모리 관리 방식과 가비지 컬렉션 알고리즘의 동작 원리를 심층적으로 다룹니다. 메모리 누수의 일반적인 원인과 탐지 방법, 크롬 개발자 도구를 활용한 메모리 프로파일링 기법, 대규모 웹 애플리케이션에서 메모리 사용량을 최적화하는 실용적인 전략과 패턴을 제시합니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2021-06-11",
    "resourceUrl": "https://ui.toast.com/weekly-pick/ko_20210611",
    "author": "최호철",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 77,
    "title": "타입 안전한 API 모킹으로 프론트엔드 생산성 높이기",
    "tags": ["Web Frontend", "TypeScript", "API모킹", "개발생산성"],
    "description": "프론트엔드 개발의 생산성을 높이는 타입스크립트 기반 API 모킹 방식: JSON에서 TypeScript로의 전환으로 API 변경 감지와 관리를 용이하게 만든 실제 사례를 소개합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-03-16",
    "resourceUrl": "https://techblog.woowahan.com/22127/",
    "author": "김하림",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 78,
    "title": "검색 성능 개선을 위한 Elasticsearch 인덱스 구조와 쿼리 최적화",
    "tags": ["JavaScript", "성능최적화", "메모리관리", "가비지컬렉션"],
    "description": "자바스크립트의 메모리 관리 방식과 가비지 컬렉션 알고리즘의 동작 원리를 심층적으로 다룹니다. 메모리 누수의 일반적인 원인과 탐지 방법, 크롬 개발자 도구를 활용한 메모리 프로파일링 기법, 대규모 웹 애플리케이션에서 메모리 사용량을 최적화하는 실용적인 전략과 패턴을 제시합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-11-28",
    "resourceUrl": "https://techblog.woowahan.com/20161/",
    "author": "이승효",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 79,
    "title": "GuardDuty 이벤트 분석으로 살펴보는 침해대응 아키텍처 고도화 사례",
    "tags": ["AWS", "보안", "GuardDuty", "DevSecOps", "클라우드보안"],
    "description": "AWS GuardDuty를 통한 보안 위협 탐지와 대응 아키텍처 고도화 과정을 소개합니다. 우아한형제들이 AWS GuardDuty에서 탐지된 아웃바운드 통신 이벤트를 분석하여 위협 탐지 가시성 확보, 대응 자동화, 잠재적 위협 가시화에 이르는 전체 침해 대응 체계를 어떻게 구축했는지 상세히 설명합니다. GuardDuty 모니터링 환경 구축부터 위협 인텔리전스(TI), 위협 인텔리전스 플랫폼(TIP)을 활용한 보조지표 확보, 자동 차단 플레이북 개발, 악성 IP와 연관된 도메인 정보 활용을 통한 선제적 차단까지 전체 대응 전략과 아키텍처를 포괄적으로 다룹니다.",
    "difficulty": "어려움",
    "category": "클라우드",
    "dateAdded": "2025-04-01",
    "resourceUrl": "https://techblog.woowahan.com/21544/",
    "author": "이주호",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 80,
    "title": "최적화된 인스턴스 추천을 위한 Rightsizing Recommendations 시스템 개발 여정",
    "tags": ["AWS", "클라우드", "비용최적화", "DevOps", "SRE"],
    "description": "우아한형제들의 클라우드 인프라 비용 최적화를 위한 Rightsizing Recommendations 시스템 개발 과정을 설명합니다. 클라우드 인프라가 빠르게 성장함에 따라 효율적인 비용 관리의 중요성이 대두되었고, 이를 해결하기 위해 인스턴스 비용 최적화를 목표로 한 시스템을 개발했습니다. 이 시스템은 클라우드 리소스 사용량을 분석하여 최적의 인스턴스 타입을 추천하고, 비용 효율성을 향상시키는데 초점을 맞추고 있습니다. 시스템 개발 배경부터 설계 과정, 실제 적용 방법, 그리고 이를 통해 얻은 성과까지 상세히 다룹니다.",
    "difficulty": "보통",
    "category": "클라우드",
    "dateAdded": "2024-11-14",
    "resourceUrl": "https://techblog.woowahan.com/19685/",
    "author": "이연수",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 81,
    "title": "타입 안전한 API 모킹으로 프론트엔드 생산성 높이기",
    "tags": ["TypeScript", "API", "Frontend", "모킹", "개발생산성"],
    "description": "프론트엔드 개발에서 API 응답 모킹이 필수적인 이유와 이를 효과적으로 구현하는 방법을 소개합니다. 이 글에서는 TypeScript 기반 모킹으로 전환한 배경, 구체적인 구현 방법, 얻은 개선 효과, 그리고 직면한 한계점을 상세히 설명합니다. 특히 컴파일러의 타입 검증 지원을 통한 API 변경 감지, 베이스 파일과 시나리오 패턴을 통한 코드 품질 및 생산성 향상, as 타입 단언을 활용한 유연한 타입 체크 등의 장점을 강조합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-05-16",
    "resourceUrl": "https://techblog.woowahan.com/22127/",
    "author": "김하림",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 82,
    "title": "대규모 트래픽의 C++ 시스템 Java로 전환하기",
    "tags": ["Java", "C++", "시스템마이그레이션", "성능최적화", "Spring Boot"],
    "description": "사용자의 배달 주소를 기반으로 행정동/법정동 정보를 판단하는 고성능 C++ 웹 서버를 Java와 Spring Boot 기반으로 성공적으로 마이그레이션한 과정을 설명합니다. 기존 C++ 서버는 피크 시간 기준 2000TPS 이상의 트래픽을 10ms 이하의 응답 시간으로 처리할 수 있는 뛰어난 성능을 제공했지만, C++의 특성상 다양한 운영상 단점이 존재했습니다. 이 글에서는 Java로의 전환 과정에서 직면한 도전 과제들, 특히 GC(Garbage Collection) 이슈 해결과 같은 기술적 세부 사항을 상세히 다룹니다. C++ 모듈의 구조가 Java로 전환하기에 용이했던 점, 유관 부서들의 모니터링 지원이 성공적인 배포에 기여한 방식, 그리고 커스터마이징된 배포 방식과 GC 디버깅 과정에 대한 인사이트를 제공합니다. 최종적으로 Java로 전환한 후 더 적은 비용의 서버로 동일한 트래픽을 문제없이 처리할 수 있게 되었고, 모니터링 및 유지보수도 더 간편해진 성과를 달성했습니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2025-01-07",
    "resourceUrl": "https://techblog.woowahan.com/20763/",
    "author": "장렬",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 83,
    "title": "검색 성능 개선을 위한 Elasticsearch 인덱스 구조와 쿼리 최적화",
    "tags": ["Elasticsearch", "검색엔진", "성능최적화", "쿼리최적화", "백엔드"],
    "description": "커머스검색개발파트에서 Elasticsearch(ES)를 활용한 검색 및 리스팅 API의 성능 최적화 과정을 다룹니다. 비마트와 배민스토어부터 대형 셀러들(GS25, GS the Fresh, 이마트에브리데이, CU 등)의 추가로 인해 색인 문서량이 약 3배 증가했고, 다양한 필터와 검색어 매칭 필드가 추가되면서 API 호출 수도 약 1.5배 증가했습니다. 이처럼 급격히 증가한 기능과 요청량에 대응하기 위해 ES 인덱스 구조와 쿼리를 최적화한 방법을 상세히 설명합니다. 커머스 검색 API의 레이턴시를 획기적으로 개선하기 위해 적용한 다양한 ES 최적화 기법들, 인덱스 구조 변경, 쿼리 패턴 개선, 그리고 이를 통해 얻은 성능 향상 결과를 구체적으로 공유합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-11-28",
    "resourceUrl": "https://techblog.woowahan.com/20161/",
    "author": "이승효",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 84,
    "title": "React Native에서 타입 안전한 파일 기반 라우팅 구현하기",
    "tags": ["React Native", "TypeScript", "라우팅", "파일기반라우팅", "모바일"],
    "description": "토스의 React Native 프레임워크 'Bedrock'에서 타입 안전한 파일 기반 라우팅을 구현한 방법을 소개합니다. Bedrock은 '단단한 기반암'이라는 의미처럼 프로젝트 개발에 견고한 기초를 제공하는 React Native 프레임워크로, 다양한 플랫폼에서 일관된 성능과 사용자 경험을 제공합니다. 이 글에서는 Bedrock이 파일 기반 라우팅의 문제를 어떻게 해결했는지, 특히 타입 안전성을 어떻게 보장하는지 상세히 다룹니다. React Native 앱 개발에서 타입 안전한 라우팅 구현에 관심 있는 개발자들에게 실용적인 접근법과 솔루션을 제공합니다.",
    "difficulty": "보통",
    "category": "모바일",
    "dateAdded": "2025-03-26",
    "resourceUrl": "https://toss.tech/article/rn-toss-bedrock",
    "author": "강선규",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 85,
    "title": "ESBuild를 위한 HMR, 직접 만들기",
    "tags": ["ESBuild", "HMR", "프론트엔드도구", "번들러", "개발경험"],
    "description": "프론트엔드 개발 경험을 향상시키는 핵심 기능 중 하나인 HMR(Hot Module Replacement)을 ESBuild 기반 번들러에서 직접 구현하는 방법을 소개합니다. 이 글에서는 먼저 HMR의 개념과 동작 원리를 설명하고, Metro, Webpack, Vite 등 다양한 번들러의 HMR 구현 방식을 비교합니다. 그 다음으로 ESBuild 기반 번들러에서 HMR을 구현할 때 해결해야 할 과제들을 다루며, 런타임 모듈 접근, 의존성 그래프 구축, 파일 변경 감지 등 핵심 구현 전략을 상세히 설명합니다. 프론트엔드 개발 도구에 관심이 있거나 번들러 내부 동작을 이해하고자 하는 개발자들에게 깊이 있는 기술적 인사이트와 실용적인 구현 방법을 제공합니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2025-03-18",
    "resourceUrl": "https://toss.tech/article/frontend-esbuild-hmr",
    "author": "이근혁",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 86,
    "title": "HiveQL을 Spark SQL로 이전 시 발생하는 문제 해결하기",
    "tags": ["HiveQL", "Spark SQL", "데이터엔지니어링", "빅데이터", "SQL"],
    "description": "LINE Plus Messaging Data Eng Dev (NP) 팀에서 진행한 HiveQL 작업을 Spark SQL로 이전하는 과정에서 발생한 문제점들과 그 해결책을 상세히 설명합니다. 특히 INSERT OVERWRITE TABLE SQL 구문을 사용한 데이터 적재 시 Spark 설정에 따라 Hive에서는 나타나지 않았던 다양한 현상이 발생했고, 이를 해결하는 과정에서 얻은 인사이트를 공유합니다. 작업 배경과 환경 소개, HiveQL에서 Spark SQL로의 이전 과정, Spark 설정에 따라 발생한 여러 현상과 각 현상의 재현 방법, 그리고 근본 원인과 대응 방법을 체계적으로 다룹니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2023-08-23",
    "resourceUrl": "https://engineering.linecorp.com/ko/blog/from-hiveql-to-sparksql-troubleshooting",
    "author": "정우영",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 87,
    "title": "MySQL ALTER DDL 수행 방식에 대한 이해",
    "tags": ["MySQL", "데이터베이스", "DDL", "성능최적화", "백엔드"],
    "description": "MySQL의 ALTER DDL 수행 방식과 알고리즘의 변화, 내부 동작 원리를 심층적으로 분석한 글입니다. 이 글에서는 현재 MySQL이 제공하는 세 가지 ALTER DDL 알고리즘(COPY, In-Place, Instant)의 주요 함수와 내부 동작 과정, 알고리즘 간 Meta Lock 동작 비교 등을 자세히 살펴봅니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2025-05-14",
    "resourceUrl": "https://tech.kakao.com/posts/703",
    "author": "줌",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 88,
    "title": "Node.js로 구현하는 마이크로서비스 아키텍처",
    "tags": ["Node.js", "마이크로서비스", "Docker", "서버 아키텍처"],
    "description": "Node.js를 활용한 마이크로서비스 아키텍처 설계 및 구현 방법을 단계별로 설명합니다. 서비스 간 통신, 데이터 일관성 유지, 배포 전략 등의 핵심 개념과 실제 구현 사례를 통해 실무에 적용할 수 있는 지식을 제공합니다 ♪",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2015-06-15",
    "resourceUrl": "https://www.nginx.com/blog/building-microservices-using-an-api-gateway/",
    "author": "NGINX",
    "isBookmarked": false,
    "language": "EN"
  },
  {
    "id": 89,
    "title": "iOS 개발자를 위한 DocC 실무 튜토리얼",
    "tags": ["iOS", "DocC", "Swift", "문서화", "애플개발"],
    "description": "올리브영 iOS 앱 개발팀이 Apple의 공식 문서화 도구인 DocC를 활용하여 개발 생산성을 크게 향상시킨 경험을 공유합니다. DocC의 주요 기능, 설정 방법, 작성 가이드, 그리고 GitHub Pages를 통한 배포 방법까지 실무에서 바로 적용할 수 있는 내용을 튜토리얼 형식으로 제공합니다. iOS 앱 개발자와 팀 리더들에게 문서화 프로세스를 효율적으로 개선할 수 있는 실질적인 방법론을 제시합니다.",
    "difficulty": "보통",
    "category": "모바일",
    "dateAdded": "2025-03-28",
    "resourceUrl": "https://oliveyoung.tech/2025-03-28/swift-docc/",
    "author": "럭셔Lee",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 90,
    "title": "Monstache로 DocumentDB와 OpenSearch 동기화하기",
    "tags": ["Monstache", "DocumentDB", "OpenSearch", "데이터동기화", "AWS"],
    "description": "올리브영의 상품 데이터 관리 시스템에서 AWS DocumentDB와 OpenSearch 간의 데이터 동기화를 위해 Monstache를 활용한 경험을 공유합니다. Monstache는 MongoDB와 Elasticsearch 간의 실시간 데이터 동기화, 필터링, OpenSearch 호환성, 웹서버 기능 등을 제공하여 요구사항에 적합했습니다. 이 글에서는 Monstache를 선택한 배경, POC(Proof of Concept) 과정에서 겪은 시행착오, 그리고 최종적으로 성공적인 데이터 동기화를 구현한 경험을 상세히 설명합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-02-03",
    "resourceUrl": "https://oliveyoung.tech/2025-02-03/monstache-journey/",
    "author": "국밥빌런",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 91,
    "title": "AWS RDS에서 MySql 한글 및 이모지 처리",
    "tags": ["mysql", "aws", "rds", "utf8", "utf8mb4", "emoji", "이모지"],
    "description": "MySQL에서 한글 및 이모지를 제대로 처리하기 위한 character set 설정 방법을 설명합니다. MySQL의 utf8은 실제로 3바이트만 지원하여 이모지 등 4바이트 유니코드 문자를 처리할 수 없는 문제와 AWS RDS에서 utf8mb4 설정을 적용하는 방법을 상세히 다룹니다. 데이터베이스 설계 초기에 캐릭터셋을 올바르게 설정하는 중요성과 타임존 설정까지 포함한 데이터베이스 환경 구성 지침을 제공합니다.",
    "difficulty": "쉬움",
    "category": "백엔드",
    "dateAdded": "2020-06-20",
    "resourceUrl": "https://blog.gangnamunni.com/post/aws-rds-mysql-utf8mb4",
    "author": "Brown",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 92,
    "title": "Transactional Outbox 패턴으로 메시지 발행 보장하기",
    "tags": ["메시지큐", "이벤트드리븐", "트랜잭션", "패턴", "메시지브로커"],
    "description": "Event Driven Architecture에서 메시지 발행의 신뢰성을 보장하는 Transactional Outbox 패턴을 소개합니다. DB 트랜잭션과 Message Broker 간 원자성을 보장할 수 없는 문제를 해결하기 위한 방법으로, 메시지를 DB 테이블에 저장한 후 별도의 프로세스를 통해 Message Broker에 발행하는 패턴을 다룹니다. Polling Publisher 방식을 중심으로 구현 방법과 성능 튜닝, 실제 서비스 적용 경험을 공유합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-01-17",
    "resourceUrl": "https://ridicorp.com/story/transactional-outbox-pattern-ridi/",
    "author": "강규",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 93,
    "title": "RiGrid: Server Driven UI를 통해 변화에 민첩하게 대응하기",
    "tags": ["Server-Driven-UI", "React", "UI프레임워크", "레이아웃시스템"],
    "description": "Server Driven UI 방식의 RiGrid 프레임워크를 활용하여 효율성과 유연성을 높이는 전략을 소개합니다. Cell 단위로 UI를 설계하여 기획, 디자인, 개발팀의 협업 효율성을 극대화하고, 재사용 가능한 UI 컴포넌트를 통해 개발 속도를 향상시키는 방법을 다룹니다. 유연한 레이아웃 구성, 콘텐츠 관리의 효율성, 실험의 용이성 등 Server Driven 방식의 장점과 실제 마케팅용 랜딩 페이지와 검색 페이지에 적용한 사례를 공유합니다.",
    "difficulty": "보통",
    "category": "프론트엔드",
    "dateAdded": "2025-03-17",
    "resourceUrl": "https://ridicorp.com/story/rigrid-server-driven-ui/",
    "author": "한준희",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 94,
    "title": "리액트 네이티브로 글로벌 앱 개발하기",
    "tags": ["React Native", "모바일앱", "크로스플랫폼", "글로벌서비스"],
    "description": "5개월 만에 개발하여 1년 만에 300만 다운로드를 달성한 웹툰 구독 서비스 '만타(Manta)'의 개발 경험을 공유합니다. 크로스플랫폼 개발을 위해 리액트 네이티브를 선택한 이유와 Android, iOS 앱을 빠르고 효율적으로 개발한 기술적 노하우를 설명합니다. 적은 개발자 수로 효과적으로 글로벌 서비스를 개발한 사례와 리액트 네이티브의 장점, 그리고 다른 기술 스택(Flutter, Ionic 등)과의 비교 분석을 제공합니다.",
    "difficulty": "보통",
    "category": "모바일",
    "dateAdded": "2021-11-15",
    "resourceUrl": "https://ridicorp.com/story/react-native-manta-app/",
    "author": "김희규",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 95,
    "title": "Kafka Connect로 DB 데이터 쉽게 연동하기",
    "tags": ["Kafka", "Kafka Connect", "JDBC", "데이터파이프라인", "데이터베이스"],
    "description": "Kafka Connect와 JDBC 커넥터를 활용하여 다양한 데이터베이스의 데이터를 Kafka로 쉽게 전송하는 방법을 소개합니다. 데이터베이스와 카프카 간의 데이터를 실시간으로 전달하는 Kafka Connect의 기본 개념부터 JDBC 소스 커넥터의 다양한 쿼리 모드, 특히 증분 쿼리 모드를 활용한 효율적인 데이터 추출 방법을 상세히 설명합니다. 복잡한 권한 설정이나 구성 없이 간단하게 데이터 파이프라인을 구축하는 방법과 발생 가능한 문제를 해결하는 방법을 공유합니다.",
    "difficulty": "보통",
    "category": "백엔드",
    "dateAdded": "2025-03-04",
    "resourceUrl": "https://helloworld.kurly.com/blog/kafka-connect-pipeline/",
    "author": "김소라",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 96,
    "title": "99%가 모른다는 DB Connection 누수 문제",
    "tags": ["DB Connection", "Garbage Collector", "메모리누수", "mysql-connector-j", "성능최적화"],
    "description": "DB Connection과 Garbage Collector의 관계를 중심으로 mysql-connector-j 사용 시 발생할 수 있는 메모리 누수 문제를 탐지하고 해결한 경험을 공유합니다. Connection 누수의 주요 증상(Out Of Memory, GC 공간 확보 불가, 비정상적으로 긴 API 응답 시간)과 원인을 분석하고, AbandonedConnectionCleanupThread의 구조적 문제와 max-lifetime 설정 관련 이슈를 밝혀냅니다. 트래픽 문제로 착각하기 쉬운 Connection 누수 문제를 진단하는 방법과 Heap Dump 분석의 중요성을 강조합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2025-01-06",
    "resourceUrl": "https://helloworld.kurly.com/blog/connection-leak/",
    "author": "김동호",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 97,
    "title": "MySqlPagingQueryProvider 살펴보기",
    "tags": [
      "Spring Batch",
      "JdbcPagingItemReader",
      "MySqlPagingQueryProvider",
      "MySQL",
      "페이지네이션"
    ],
    "description": "Spring Batch에서 JdbcPagingItemReader와 MySqlPagingQueryProvider를 사용할 때 주의해야 할 사항을 설명합니다. Spring Batch의 기본 구조와 Chunk 단위 처리 방식을 소개하고, MySqlPagingQueryProvider의 Pagination 전략에서 발생할 수 있는 두 가지 주요 이슈(일부만 발행되는 문제와 group clause, table alias 사용 시 첫 페이지에서만 동작하는 문제)를 분석합니다. 초기 버전의 PagingQueryProvider의 문제점과 개선된 버전의 차이점을 비교하고, MySqlPagingQueryProvider가 Where 조건으로 페이지를 나누고 grouping 시 inline view를 생성하는 작동 원리를 자세히 설명합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2024-12-30",
    "resourceUrl": "https://helloworld.kurly.com/blog/2024-mysql-paging-query-provider/",
    "author": "이경훈",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 98,
    "title": "자료구조를 활용한 복잡한 프론트엔드 컴포넌트 제작하기",
    "tags": ["자료구조", "이진트리", "프론트엔드", "컴포넌트", "그리드레이아웃"],
    "description": "토스증권 PC의 종목 상세 화면에 적용된 복잡한 그리드 레이아웃 UI를 라이브러리 없이 직접 구현한 사례를 소개합니다. 패널 추가/제거, 크기 변경, 최소 크기 지원, 레이아웃 저장 등의 복잡한 요구사항을 충족하기 위해 이진 트리 자료구조를 활용한 구현 방법을 설명합니다. 라이브러리 커스텀과 직접 구현의 장단점을 비교하고, 요구사항이 복잡해질수록 직접 구현이 더 효율적일 수 있는 이유와 이진 트리 자료구조가 어떻게 UI 컴포넌트 구현에 활용될 수 있는지 상세히 다룹니다.",
    "difficulty": "어려움",
    "category": "프론트엔드",
    "dateAdded": "2025-03-18",
    "resourceUrl": "https://toss.tech/article/frontend-tree-structure",
    "author": "박건영",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 99,
    "title": "CocoaPods 없이 React Native 개발하기",
    "tags": ["React Native", "iOS", "CocoaPods", "의존성관리", "Prebuild"],
    "description": "운영 중인 iOS 서비스에 React Native를 부분적으로 도입할 때 CocoaPods 없이 구현하는 방법을 설명합니다. 토스가 코로나 QR인증 SDK를 통해 React Native를 도입하게 된 배경과, 점차 크로스 플랫폼 도구로 확장하게 된 과정을 소개합니다. 의존성 관리 도구를 하나만 사용해야 하는 이유와 CocoaPods 대신 다른 방법으로 React Native를 iOS 환경에서 활용하는 방법, 그리고 Prebuild를 사용했을 때의 빌드 속도 개선 등 장점에 대해 상세히 다룹니다.",
    "difficulty": "어려움",
    "category": "모바일",
    "dateAdded": "2024-11-06",
    "resourceUrl": "https://toss.tech/article/react-native-without-cocoapods",
    "author": "오진성",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 100,
    "title": "StarRocks의 도입 배경과 성능 최적화",
    "tags": ["StarRocks", "OLAP", "데이터베이스", "ELT", "성능최적화"],
    "description": "컴퓨팅 성능의 발전에 따라 ETL(추출, 변환, 로드)에서 ELT(추출, 로드, 변환)로 전환되는 데이터 통합 프로세스의 변화와 그에 따른 고성능 OLAP 엔진의 필요성을 설명합니다. Apache Iceberg와 같은 오픈 테이블 형식과 스키마 진화가 가능한 기술의 등장 배경을 소개하고, StarRocks와 같은 고성능 OLAP 데이터베이스가 주목받는 이유를 분석합니다. 기존의 플랫 테이블 구조에서 JOIN을 활용한 방법으로의 전환 장점과 ClickHouse와 StarRocks 같은 OLAP 워크로드 처리에 특화된 데이터베이스의 비교 분석을 제공합니다.",
    "difficulty": "어려움",
    "category": "백엔드",
    "dateAdded": "2025-04-16",
    "resourceUrl": "https://d2.naver.com/helloworld/1168674",
    "author": "김영진, 이모원",
    "isBookmarked": false,
    "language": "KO"
  },
  {
    "id": 101,
    "title": "Java를 주로 다루는 개발자가 생각하는 Kotlin 장점",
    "tags": ["Kotlin", "Java", "프로그래밍언어", "문법비교"],
    "description": "Java에 익숙한 개발자가 Kotlin을 사용하며 경험할 수 있는 다양한 장점을 소개합니다. 간결한 문법과 편리해진 기능, null에 대한 안전한 처리, 함수형 프로그래밍 지원, 확장 함수 등 Kotlin의 핵심 특징을 Java와 비교하여 설명합니다. 개발자가 직접 각 기능에 대한 만족도를 별점으로 표현하며, OOP와 FP의 장점을 모두 갖춘 Kotlin이 Java 개발자들에게 왜 사랑받는지, 그리고 얼마나 쉽게 학습할 수 있는지 실제 경험을 바탕으로 공유합니다.",
    "difficulty": "쉬움",
    "category": "백엔드",
    "dateAdded": "2024-12-08",
    "resourceUrl": "https://oliveyoung.tech/2024-12-08/kotlin-advantages/",
    "author": "들국화",
    "isBookmarked": false,
    "language": "KO"
  }
]
